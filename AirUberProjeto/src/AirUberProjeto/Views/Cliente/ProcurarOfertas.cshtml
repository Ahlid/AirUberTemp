

@{
    ViewBag.Title = "Viajar";
    Layout = "_NovoLayout";
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */


    
</style>


<div id="controlos" style="display: none; margin-top: 10px">
    <div class="panel panel-default" style="width: 600px">
        <div class="panel-heading">
            <h3 id="titulo">Selecione a data e o ponto de partida</h3>
        </div>
        <div class="panel-body">
            <div id="datepicker-container" class="input-group">
                <span id="title" class="input-group-addon">Data de partida</span>
                <input id="controlo-data" style="width: 400px;" class="controls form-control" type="datetime-local" />
            </div>
            <input id="controlo-pesquisa" style="margin-top: 10px;width: 400px;" class="controls form-control" type="text" placeholder="Pesquisar localizações" /><br />
        </div></div>
</div>


<div id="map" />

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>

    var aeroportos = [];

    var markersAeroporto = [];
    var markerA = null;
    var aeroportoA = null;

    var map;

    //Quando o datetime picker altera de valor
    $('#controlo-data').on('input', function () {

        var date = $(this).val();
        $.get("AeroportosDisponiveis?data=" + $(this).val(), function (data, status) {

            aeroportos = [];

            if (status !== 'success') {
                return;
            }

            for (var i = 0; i < data.length; i++) {
                aeroportos.push({
                    "id": data[i].aeroportoId,
                    "nome": data[i].nome
                });
            }

            marcarAeroportos('partida', date);

        });

    });


    function construirSearchBar(id) {
        // Create the search box and link it to the UI element.
        var input = document.getElementById(id);
        var searchBox = new google.maps.places.SearchBox(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function () {
            searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            // Clear out the old markers.
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            places.forEach(function (place) {
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    animation: google.maps.Animation.DROP,
                    title: place.name,
                    position: place.geometry.location
                }));

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });
    }

    function onSelecionarAeroportoPartida(id, date) {

        var dateContainer = document.getElementById("datepicker-container");
        dateContainer.style.display = 'none';

        var titulo = document.getElementById('titulo');
        titulo.innerText = "Escolha o aeroporto de destino disponivel";


        $.get("AeroportosDestinoDisponiveis?id=" + id + "&data=" + date, function (data, status) {

            aeroportos = [];

            if (status !== 'success') {
                return;
            }

            for (var i = 0; i < data.length; i++) {
                aeroportos.push({
                    "id": data[i].aeroportoId,
                    "nome": data[i].nome
                });
            }

            marcarAeroportos('destino', date);

        });

    }

    function onSelecionarAeroportoDestino(id, data) {
        window.location.replace('VerJatos?iddestino=' + id + '&idpartida=' + aeroportoA.id + '&data=' + data);
    }

    function marcarAeroporto(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
            var marker = new google.maps.Marker({
                map: map,
                place: {
                    placeId: results[0].place_id,
                    location: results[0].geometry.location
                }
            });

            return marker;
        }
    }

    function marcarAeroportos(tipo, data) {

        markersAeroporto.forEach(function (marker) {
            marker.setMap(null);
        });

        markersAeroporto = [];


        aeroportos.forEach(function (aeroporto) {

            var request = {
                location: map.getCenter(),
                radius: '500',
                query: aeroporto.nome
            };

            var service = new google.maps.places.PlacesService(map);
            service.textSearch(request,
                function (results, status) {
                    var marker = marcarAeroporto(results, status);
                    if (marker != null) {

                        if (tipo === "partida") {
                            marker.setLabel('A');
                        } else {
                            marker.setLabel('B');
                        }

                        markersAeroporto.push(marker);

                        var listener;
                        var onClick = function () {
                            if (tipo === "partida") {
                                markerA = marker;
                                markersAeroporto.splice( markersAeroporto.indexOf(marker), 1 );
                                aeroportoA = aeroporto;
                                google.maps.event.removeListener(listener);
                                onSelecionarAeroportoPartida(aeroporto.id, data);
                            } else {
                                onSelecionarAeroportoDestino(aeroporto.id, data);
                            }
                        }
                        listener = marker.addListener('click', onClick);
                            
                    }

                });
        });
    }

    function onMapReady() {

        var div = document.getElementById("controlos");
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(div);

        div.style.display = 'block';

        construirSearchBar('controlo-pesquisa');

    }

    function initMap() {

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 39.628659, lng: -8.240542 },
            zoom: 4
        });

        google.maps.event.addListenerOnce(map, 'idle', function () {
            onMapReady(map);
        });

    }


</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCXnce5Tv0ZKySN4FFdkwdEoQ0EOmIUxZk&callback=initMap&libraries=places">
</script>
